{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\devbr\\\\OneDrive\\\\Desktop\\\\August\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      type: \"user\",\n      text: input\n    };\n    const botMsg = {\n      type: \"bot\",\n      text: \"This is a bot response.\"\n    }; // Replace with API call\n\n    setMessages([...messages, userMsg, botMsg]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"August Chatbot \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.type}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"chat-input\",\n      placeholder: \"Type your message...\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-btn\",\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sendMessage","trim","userMsg","type","text","botMsg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/devbr/OneDrive/Desktop/August/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = () => {\r\n    if (!input.trim()) return;\r\n    const userMsg = { type: \"user\", text: input };\r\n    const botMsg = { type: \"bot\", text: \"This is a bot response.\" }; // Replace with API call\r\n\r\n    setMessages([...messages, userMsg, botMsg]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h1 className=\"text-center\">August Chatbot ðŸš€</h1>\r\n      <div>\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`chat-message ${msg.type}`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"chat-input\"\r\n        placeholder=\"Type your message...\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n      />\r\n      <button className=\"send-btn\" onClick={sendMessage}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;IACnB,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAEN;IAAM,CAAC;IAC7C,MAAMO,MAAM,GAAG;MAAEF,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAA0B,CAAC,CAAC,CAAC;;IAEjEP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,OAAO,EAAEG,MAAM,CAAC,CAAC;IAC3CN,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bd,OAAA;MAAIa,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDlB,OAAA;MAAAc,QAAA,EACGX,QAAQ,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBrB,OAAA;QAEEa,SAAS,EAAE,gBAAgBO,GAAG,CAACV,IAAI,EAAG;QAAAI,QAAA,EAErCM,GAAG,CAACT;MAAI,GAHJU,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA;MACEU,IAAI,EAAC,MAAM;MACXG,SAAS,EAAC,YAAY;MACtBS,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAElB,KAAM;MACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIrB,WAAW,CAAC;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACFlB,OAAA;MAAQa,SAAS,EAAC,UAAU;MAACgB,OAAO,EAAEtB,WAAY;MAAAO,QAAA,EAAC;IAEnD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAvCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}